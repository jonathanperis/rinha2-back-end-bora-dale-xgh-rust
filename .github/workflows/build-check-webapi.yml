name: Main Check Build

on:
  pull_request:
    branches:
      - main

jobs:
  setup-build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./src/WebApi"

    env:
      # Set a DATABASE_URL for sqlx preparation.
      DATABASE_URL: "postgres://postgres:postgres@localhost/rinha"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
          # cache: cargo

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --version 0.7.0          

      - name: Prepare SQLx offline query cache
        run: cargo sqlx prepare

      - name: Build the application
        run: cargo build --release

  container-test:
    needs: setup-build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Build and Run Docker Compose for Healthcheck Test
        run: |
          docker compose -f ./docker-compose.yml up nginx -d
          sleep 10

      - name: Test Healthcheck Endpoint
        run: |
          for i in {1..20}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9999/healthz)
            if [ "$STATUS" -eq 200 ]; then
              echo "Healthcheck passed with status $STATUS"
              exit 0
            else
              echo "Healthcheck attempt $i failed with status $STATUS. Retrying..."
              sleep 2
            fi
          done
          echo "Healthcheck failed after 20 attempts."
          exit 1